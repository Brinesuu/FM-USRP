C51 COMPILER V9.60.0.0   DS18B20                                                           04/10/2024 12:13:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ds18b20.OBJ
COMPILER INVOKED BY: D:\20217972\C51\BIN\C51.EXE ds18b20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************************
   2          作者：单片机俱乐部
   3          网站：https://www.mcuclub.cn/
   4          **********************************/
   5          
   6          
   7          /**********************************
   8          包含头文件
   9          **********************************/
  10          #include "ds18b20.h"
  11          
  12          
  13          /****
  14          *******延时函数
  15          *****/
  16          void ds18b20_delay_uint(uint z)
  17          {
  18   1       while(z--);
  19   1      }
  20          
  21          /****
  22          *******DS18B20初始化函数
  23          *****/
  24          void Ds18b20_Init(void)
  25          {
  26   1        bit q;
  27   1        DS18B20_DQ=1;                     //把总线拿高
  28   1        ds18b20_delay_uint(1);            //15us
  29   1        DS18B20_DQ=0;                     //给复位脉冲
  30   1        ds18b20_delay_uint(80);           //750us
  31   1        DS18B20_DQ=1;                     //把总线拿高 等待
  32   1        ds18b20_delay_uint(10);           //110us
  33   1        q=DS18B20_DQ;                     //读取18b20初始化信号
  34   1        ds18b20_delay_uint(20);           //200us
  35   1        DS18B20_DQ=1;                     //把总线拿高 释放总线
  36   1      }
  37          
  38          /****
  39          *******写ds18b20内的数据函数
  40          *****/
  41          void write_18b20(uchar dat)
  42          {
  43   1        uchar i;
  44   1        for(i=0;i<8;i++)
  45   1        {                                 //写数据是低位开始
  46   2          DS18B20_DQ=0;                   //把总线拉低写时间隙开始 
  47   2          DS18B20_DQ=dat&0x01;            //向18b20总线写数据了
  48   2          ds18b20_delay_uint(5);          // 60us
  49   2          DS18B20_DQ=1;                   //释放总线
  50   2          dat>>=1;
  51   2        } 
  52   1      }
  53          
  54          /****
  55          *******读取ds18b20内的数据函数
C51 COMPILER V9.60.0.0   DS18B20                                                           04/10/2024 12:13:05 PAGE 2   

  56          *****/
  57          uchar read_18b20(void)
  58          {
  59   1        uchar i,value;
  60   1        for(i=0;i<8;i++)
  61   1        {
  62   2          DS18B20_DQ=0;                   //把总线拿低读时间隙开始 
  63   2          value>>= 1;                     //读数据是低位开始
  64   2          DS18B20_DQ=1;                   //释放总线
  65   2          if(DS18B20_DQ==1)               //开始读写数据 
  66   2            value|=0x80;
  67   2          ds18b20_delay_uint(5);          //60us  读一个时间隙最少要保持60us的时间
  68   2        }
  69   1        return value;                     //返回数据
  70   1      }
  71          
  72          /****
  73          *******读取温度值函数
  74          *******返回值：温度值(扩大10倍)
  75          *****/
  76          int Ds18b20_Read_Temp(void)
  77          {
  78   1        int temp = 0;
  79   1        uchar tmh, tml;
  80   1      
  81   1        EA = 0;
  82   1        Ds18b20_Init();                   //初始化18b20
  83   1        write_18b20(0xcc);                //跳过64位ROM
  84   1        write_18b20(0x44);                //启动一次温度转换命令
  85   1        ds18b20_delay_uint(50);           //500us
  86   1      
  87   1        Ds18b20_Init();                   //初始化18b20 
  88   1        write_18b20(0xcc);                //跳过64位ROM
  89   1        write_18b20(0xbe);                //发出读取暂存器命令
  90   1      
  91   1        
  92   1        tml=read_18b20();                 //读温度低字节
  93   1        tmh=read_18b20();                 //读温度高字节
  94   1        
  95   1        TR0=1;                            //打开定时器0中断
  96   1        TR1=1;                            //打开定时器1中断
  97   1      
  98   1        temp = tmh;                       //整合数值
  99   1        temp <<= 8;
 100   1        temp |= tml;
 101   1      
 102   1        temp=temp*0.625;                  //换算成温度
 103   1        EA = 1;
 104   1        return temp;                      //返回读出的温度
 105   1      }
 106          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   DS18B20                                                           04/10/2024 12:13:05 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
